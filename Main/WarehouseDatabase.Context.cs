//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Main
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class WarehouseDatabaseEntities : DbContext
    {
        public WarehouseDatabaseEntities()
            : base("name=WarehouseDatabaseEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<UserPermissions> UserPermissions { get; set; }
        public virtual DbSet<Permissions> Permissions { get; set; }
        public virtual DbSet<User> User { get; set; }
        public virtual DbSet<UserView> UserView { get; set; }
        public virtual DbSet<UserPasswordHistory> UserPasswordHistory { get; set; }
        public virtual DbSet<SystemAttributes> SystemAttributes { get; set; }
        public virtual DbSet<Products> Products { get; set; }
        public virtual DbSet<ProductsHistory> ProductsHistory { get; set; }
        public virtual DbSet<ProductType> ProductType { get; set; }
        public virtual DbSet<ProductVAT> ProductVAT { get; set; }
        public virtual DbSet<Stock> Stock { get; set; }
        public virtual DbSet<WarehouseView> WarehouseView { get; set; }
        public virtual DbSet<ProductsHistoryExtended> ProductsHistoryExtended { get; set; }
        public virtual DbSet<ProductVATChange> ProductVATChange { get; set; }
    
        public virtual int AddUserPasswordHistory(Nullable<System.Guid> userId, string password, Nullable<System.DateTime> changeDate)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(System.Guid));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var changeDateParameter = changeDate.HasValue ?
                new ObjectParameter("ChangeDate", changeDate) :
                new ObjectParameter("ChangeDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddUserPasswordHistory", userIdParameter, passwordParameter, changeDateParameter);
        }
    
        public virtual int DeleteOldestUserPasswordHistory(Nullable<System.Guid> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteOldestUserPasswordHistory", userIdParameter);
        }
    
        public virtual int UpdateSystemAttribute(string name, Nullable<int> value)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var valueParameter = value.HasValue ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateSystemAttribute", nameParameter, valueParameter);
        }
    }
}
